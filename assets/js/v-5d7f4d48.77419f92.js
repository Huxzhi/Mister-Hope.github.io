"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[29729],{62639:(a,e,n)=>{n.r(e),n.d(e,{default:()=>o});var t=n(16492);const s=[(0,t.uE)('<h1 id="uniq" tabindex="-1"><a class="header-anchor" href="#uniq" aria-hidden="true">#</a> uniq</h1><p><code>uniq</code> 用于过滤掉重复的行，该命令只对排序后的文件有效。</p><p>下面是 <code>example.txt</code> 文件的内容。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>a\na\nb\na\nb\nc\nd\nc\n</code></pre></div><p>对该文件进行排序后，再过滤掉重复的行。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sort</span> example.txt <span class="token operator">|</span> <span class="token function">uniq</span>\na\nb\nc\nd\n</code></pre></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><p><code>-c</code> 参数会显示每行一共出现了多少次。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sort</span> example.txt <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span>\n    <span class="token number">3</span> a\n    <span class="token number">2</span> b\n    <span class="token number">2</span> c\n    <span class="token number">1</span> d\n</code></pre></div>',9)],c={},o=(0,n(11164).Z)(c,[["render",function(a,e){return(0,t.wg)(),(0,t.iD)("div",null,s)}]])},11164:(a,e)=>{e.Z=(a,e)=>{const n=a.__vccOpts||a;for(const[a,t]of e)n[a]=t;return n}},36996:(a,e,n)=>{n.r(e),n.d(e,{data:()=>t});const t=JSON.parse('{"key":"v-5d7f4d48","path":"/linux/bash/archives/commands/uniq.html","title":"uniq","lang":"zh-CN","frontmatter":{"description":"uniq uniq 用于过滤掉重复的行，该命令只对排序后的文件有效。 下面是 example.txt 文件的内容。 a a b a b c d c 对该文件进行排序后，再过滤掉重复的行。 $ sort example.txt | uniq a b c d","head":[["meta",{"property":"og:url","content":"https://mrhope.site/linux/bash/archives/commands/uniq.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"uniq"}],["meta",{"property":"og:description","content":"uniq uniq 用于过滤掉重复的行，该命令只对排序后的文件有效。 下面是 example.txt 文件的内容。 a a b a b c d c 对该文件进行排序后，再过滤掉重复的行。 $ sort example.txt | uniq a b c d"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2021-01-27T06:58:54.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2021-01-27T06:58:54.000Z"}]]},"headers":[{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1611730734000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":2}]},"readingTime":{"minutes":0.33,"words":98},"localizedDate":"2020年6月3日","filePathRelative":"linux/bash/archives/commands/uniq.md","excerpt":"<h1> uniq</h1>\\n<p><code>uniq</code> 用于过滤掉重复的行，该命令只对排序后的文件有效。</p>\\n<p>下面是 <code>example.txt</code> 文件的内容。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>a\\na\\nb\\na\\nb\\nc\\nd\\nc\\n</code></pre></div><p>对该文件进行排序后，再过滤掉重复的行。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">sort</span> example.txt <span class=\\"token operator\\">|</span> <span class=\\"token function\\">uniq</span>\\na\\nb\\nc\\nd\\n</code></pre></div>","autoDesc":true}')}}]);