"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[15684],{21605:(n,a,e)=>{e.r(a),e.d(a,{default:()=>w});var t=e(16492);const s=(0,t._)("p",null,"小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。",-1),p=(0,t._)("strong",null,"逻辑层",-1),o=(0,t._)("strong",null,"视图层",-1),i={id:"响应的数据绑定",tabindex:"-1"},l=(0,t._)("a",{class:"header-anchor",href:"#响应的数据绑定","aria-hidden":"true"},"#",-1),c=(0,t._)("p",null,"框架的核心是一个响应的数据绑定系统，可以让数据与视图非常简单地保持同步。当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新。",-1),r={href:"https://developers.weixin.qq.com/s/l0gLEKmv6gZa",target:"_blank",rel:"noopener noreferrer"},u=(0,t.uE)('<div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- This is our View --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> Hello {{name}}! <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Click me! <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// This is our App Service.</span>\n<span class="token comment">// This is our data.</span>\n<span class="token keyword">const</span> helloData <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;WeChat&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Register a Page.</span>\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> helloData<span class="token punctuation">,</span>\n  <span class="token function">changeName</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// sent data change to view</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;MINA&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>开发者通过框架将逻辑层数据中的 <code>name</code> 与视图层的 <code>name</code> 进行了绑定，所以在页面一打开的时候会显示 <code>Hello WeChat!</code>；</li><li>当点击按钮的时候，视图层会发送 <code>changeName</code> 的事件给逻辑层，逻辑层找到并执行对应的事件处理函数；</li><li>回调函数触发后，逻辑层执行 <code>setData</code> 的操作，将 <code>data</code> 中的 <code>name</code> 从 <code>WeChat</code> 变为 <code>MINA</code>，因为该数据和视图层已经绑定了，从而视图层会自动改变为 <code>Hello MINA!</code>。</li></ol><h2 id="页面管理" tabindex="-1"><a class="header-anchor" href="#页面管理" aria-hidden="true">#</a> 页面管理</h2>',4),d=(0,t._)("strong",null,"框架",-1),m=(0,t._)("strong",null,"框架",-1),k=(0,t._)("strong",null,"框架",-1),g=(0,t._)("h2",{id:"基础组件",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#基础组件","aria-hidden":"true"},"#"),(0,t.Uk)(" 基础组件")],-1),v=(0,t._)("strong",null,"框架",-1),h=(0,t._)("h2",{id:"丰富的-api",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#丰富的-api","aria-hidden":"true"},"#"),(0,t.Uk)(" 丰富的 API")],-1),b=(0,t._)("strong",null,"框架",-1),f={},w=(0,e(11164).Z)(f,[["render",function(n,a){const e=(0,t.up)("RouterLink"),f=(0,t.up)("Badge"),w=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[s,(0,t._)("p",null,[(0,t.Uk)("整个小程序框架系统分为两部分: "),(0,t.Wm)(e,{to:"/code/mini-app/guide/service/"},{default:(0,t.w5)((()=>[p])),_:1}),(0,t.Uk)(" (App Service) 和 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/view/"},{default:(0,t.w5)((()=>[o])),_:1}),(0,t.Uk)(" (../view)。小程序提供了自己的视图层描述语言 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/view/wxml.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("WXML")])),_:1}),(0,t.Uk)(" 和 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/view/wxss.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("WXSS")])),_:1}),(0,t.Uk)("，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。")]),(0,t.kq)(" more "),(0,t._)("h2",i,[l,(0,t.Uk)(" 响应的数据绑定 "),(0,t.Wm)(f,{text:"务必理解",type:"error"})]),c,(0,t._)("p",null,[(0,t._)("a",r,[(0,t.Uk)("在开发者工具中预览效果"),(0,t.Wm)(w)])]),u,(0,t._)("p",null,[d,(0,t.Uk)(" 管理了整个小程序的页面路由，可以做到页面间的无缝切换，并给以页面完整的 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/service/lifetime.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("生命周期")])),_:1}),(0,t.Uk)("。开发者需要做的只是将页面的数据、方法、生命周期函数注册到 "),m,(0,t.Uk)(" 中，其他的一切复杂的操作都交由 "),k,(0,t.Uk)(" 处理。")]),g,(0,t._)("p",null,[v,(0,t.Uk)(" 提供了一套基础的 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/view/component.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("组件")])),_:1}),(0,t.Uk)("，"),(0,t.Wm)(e,{to:"/code/mini-app/guide/view/component.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("这些组件")])),_:1}),(0,t.Uk)(" 自带微信风格的样式以及特殊的逻辑，开发者可以通过组合基础组件，创建出强大的微信小程序 。")]),h,(0,t._)("p",null,[b,(0,t.Uk)(" 提供丰富的 "),(0,t.Wm)(e,{to:"/code/mini-app/guide/service/api/"},{default:(0,t.w5)((()=>[(0,t.Uk)("微信原生 API")])),_:1}),(0,t.Uk)("，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。")])])}]])},11164:(n,a)=>{a.Z=(n,a)=>{const e=n.__vccOpts||n;for(const[n,t]of a)e[n]=t;return e}},54892:(n,a,e)=>{e.r(a),e.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-38000fbd","path":"/code/mini-app/guide/frame/intro.html","title":"框架","lang":"zh-CN","frontmatter":{"title":"框架","icon":"frame","category":["小程序"],"description":"小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。 整个小程序框架系统分为两部分: 逻辑层 (App Service) 和 视图层 (../view)。小程序提供了自己的视图层描述语言 WXML 和 WXSS，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。","head":[["meta",{"property":"og:url","content":"https://mrhope.site/code/mini-app/guide/frame/intro.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"框架"}],["meta",{"property":"og:description","content":"小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。 整个小程序框架系统分为两部分: 逻辑层 (App Service) 和 视图层 (../view)。小程序提供了自己的视图层描述语言 WXML 和 WXSS，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:01:38.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:01:38.000Z"}]]},"headers":[{"level":2,"title":"响应的数据绑定","slug":"响应的数据绑定","link":"#响应的数据绑定","children":[]},{"level":2,"title":"页面管理","slug":"页面管理","link":"#页面管理","children":[]},{"level":2,"title":"基础组件","slug":"基础组件","link":"#基础组件","children":[]},{"level":2,"title":"丰富的 API","slug":"丰富的-api","link":"#丰富的-api","children":[]}],"git":{"createdTime":1610439651000,"updatedTime":1644163298000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":4}]},"readingTime":{"minutes":2.16,"words":647},"localizedDate":"2021年1月12日","filePathRelative":"code/mini-app/guide/frame/intro.md","excerpt":"<p>小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。</p>\\n<p>整个小程序框架系统分为两部分: <a href=\\"/code/mini-app/guide/service/\\" target=\\"blank\\"><strong>逻辑层</strong></a> (App Service) 和 <a href=\\"/code/mini-app/guide/view/\\" target=\\"blank\\"><strong>视图层</strong></a> (../view)。小程序提供了自己的视图层描述语言 <a href=\\"/code/mini-app/guide/view/wxml.html\\" target=\\"blank\\">WXML</a> 和 <a href=\\"/code/mini-app/guide/view/wxss.html\\" target=\\"blank\\">WXSS</a>，以及基于 JavaScript 的逻辑层框架，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。</p>\\n","autoDesc":true}')}}]);