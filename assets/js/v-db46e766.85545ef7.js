"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[42211],{70242:(e,t,i)=>{i.r(t),i.d(t,{default:()=>p});var m=i(55511);const r=(0,m._)("h2",{id:"squash-merge",tabindex:"-1"},[(0,m._)("a",{class:"header-anchor",href:"#squash-merge","aria-hidden":"true"},"#"),(0,m.Uk)(" Squash merge")],-1),c=(0,m._)("p",null,[(0,m.Uk)("通过使用 "),(0,m._)("code",null,"--squash"),(0,m.Uk)(" 选项，你可以在合并中将多个 commit 合并为一个。")],-1),o=(0,m._)("p",null,"也就是对于以下的例子",-1),a=(0,m._)("p",null,[(0,m._)("code",null,"git merge feature"),(0,m.Uk)(" 得到的结果为:")],-1),d=(0,m._)("p",null,[(0,m.Uk)("而如果 "),(0,m._)("code",null,"feature"),(0,m.Uk)(" 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 "),(0,m._)("code",null,"git merge --squash feature"),(0,m.Uk)(" 得到:")],-1),u=(0,m._)("h2",{id:"cherry-pick",tabindex:"-1"},[(0,m._)("a",{class:"header-anchor",href:"#cherry-pick","aria-hidden":"true"},"#"),(0,m.Uk)(" Cherry pick")],-1),A=(0,m._)("p",null,"有些时候，我们可能需要提取其他分支的某个 commit，这个时候我们可以用 cherry pick 进行操作。",-1),n=(0,m._)("p",null,[(0,m.Uk)("在这种情况下，我们可以回到 main 分支，执行 "),(0,m._)("code",null,"git cherry-pick <commit id>"),(0,m.Uk)(" 来挑拣某个提交，当然，你可以一并在命令中提交挑拣多个 commit。")],-1),l=(0,m._)("ul",null,[(0,m._)("li",null,[(0,m._)("code",null,"git cherry-pick <commit id 1> <commit id 2>"),(0,m.Uk)(" 表示挑拣 commit id 1 和 commit id 2")]),(0,m._)("li",null,[(0,m._)("code",null,"git cherry-pick <commit id 1>...<commit id 2>"),(0,m.Uk)(" 表示挑拣 commit id 1 与 commit id 2 之间 (包括两者) 的所有提交")]),(0,m._)("li",null,[(0,m._)("code",null,"git cherry-pick <branch>"),(0,m.Uk)(" 表示挑拣该分支最新的提交")])],-1),h={},p=(0,i(61935).Z)(h,[["render",function(e,t){const i=(0,m.up)("Mermaid");return(0,m.wg)(),(0,m.iD)("div",null,[r,c,o,(0,m.Wm)(i,{id:"mermaid-1a962853",code:"gitGraph%0A%20%20commit%20id%3A%22main1%22%0A%20%20branch%20feature%0A%20%20commit%20id%3A%22feature1%22%0A%20%20checkout%20main%0A%20%20commit%20id%3A%22main2%22%0A%20%20checkout%20feature%0A%20%20commit%20id%3A%22feature2%22%0A%20%20checkout%20main%0A%20%20merge%20feature%0A"}),a,(0,m.Wm)(i,{id:"mermaid-382ee148",code:"gitGraph%0A%20%20commit%20id%3A%22main1%22%0A%20%20commit%20id%3A%22feature1%22%0A%20%20commit%20id%3A%22main2%22%0A%20%20commit%20id%3A%22feature2%22%0A%20%20commit%20id%3A%22merge%20commit%22%0A"}),d,(0,m.Wm)(i,{id:"mermaid-382ee14c",code:"gitGraph%0A%20%20commit%20id%3A%22main1%22%0A%20%20commit%20id%3A%22main2%22%0A%20%20commit%20id%3A%22squash%20merge%20result%22%0A"}),u,A,(0,m.Wm)(i,{id:"mermaid-382ee168",code:"gitGraph%0A%20%20commit%0A%20%20branch%20mrhope%0A%20%20commit%20id%3A%22featureA%2020%25%22%0A%20%20commit%20id%3A%22featureA%2040%25%22%0A%20%20commit%20id%3A%22bug%20fix%22%0A%20%20commit%20id%3A%22featureA%2060%25%22%0A%20%20commit%20id%3A%22featureA%2080%25%22%0A%20%20checkout%20main%0A%20%20cherry-pick%20id%3A%22bug%20fix%22%0A%20%20checkout%20mrhope%0A%20%20commit%20id%3A%22featureA%20100%25%22%0A%20%20checkout%20main%0A%20%20merge%20mrhope%0A"}),n,(0,m.Wm)(i,{id:"mermaid-382ee16c",code:"gitGraph%0A%20%20commit%0A%20%20branch%20mrhope%0A%20%20commit%20id%3A%22featureA%2020%25%22%0A%20%20commit%20id%3A%22featureA%2040%25%22%0A%20%20commit%20id%3A%22bug%20fix1%22%0A%20%20commit%20id%3A%22featureA%2060%25%22%0A%20%20commit%20id%3A%22bug%20fix2%22%0A%20%20commit%20id%3A%22featureA%2080%25%22%0A%20%20checkout%20main%0A%20%20cherry-pick%20id%3A%22bug%20fix1%22%0A%20%20cherry-pick%20id%3A%22bug%20fix2%22%0A%20%20checkout%20mrhope%0A%20%20commit%20id%3A%22featureA%20100%25%22%0A%20%20checkout%20main%0A%20%20merge%20mrhope%0A"}),l])}]])},61935:(e,t)=>{t.Z=(e,t)=>{const i=e.__vccOpts||e;for(const[e,m]of t)i[e]=m;return i}},86072:(e,t,i)=>{i.r(t),i.d(t,{data:()=>m});const m=JSON.parse('{"key":"v-db46e766","path":"/software/git/merge.html","title":"高级合并","lang":"zh-CN","frontmatter":{"title":"高级合并","icon":"merge","order":17,"category":["Git"],"tag":["Git","软件"],"summary":"Squash merge 通过使用 --squash 选项，你可以在合并中将多个 commit 合并为一个。 也就是对于以下的例子 git merge feature 得到的结果为: 而如果 feature 分支意在实现一个完成的特性，两个 commit 只是工作进度实际上并不重要的时候，我们可以通过 git merge --squash feature 得","head":[["meta",{"property":"og:url","content":"https://mrhope.site/software/git/merge.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"高级合并"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-09-07T17:18:06.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"软件"}],["meta",{"property":"article:modified_time","content":"2022-09-07T17:18:06.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Squash merge","slug":"squash-merge","link":"#squash-merge","children":[]},{"level":2,"title":"Cherry pick","slug":"cherry-pick","link":"#cherry-pick","children":[]}],"git":{"createdTime":1662571086000,"updatedTime":1662571086000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"software/git/merge.md","localizedDate":"2022年9月7日"}')}}]);