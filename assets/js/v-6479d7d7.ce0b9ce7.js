"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[98981],{71027:(e,s,n)=>{n.r(s),n.d(s,{default:()=>r});var t=n(16492);const a=(0,t.uE)('<p>由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。</p><h2 id="代理设置" tabindex="-1"><a class="header-anchor" href="#代理设置" aria-hidden="true">#</a> 代理设置</h2><p>通常情况下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p><p>在 Windows 下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p><details class="custom-container details"><summary>Windows 例子</summary><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token assign-left variable">HTTP_PROXY</span><span class="token operator">=</span>http://127.0.0.1:1080\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">HTTPS_PROXY</span><span class="token operator">=</span>http://127.0.0.1:1080\n</code></pre></div></details><details class="custom-container details"><summary>Linux 例子</summary><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTP_PROXY</span><span class="token operator">=</span>http://127.0.0.1:1080\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTPS_PROXY</span><span class="token operator">=</span>http://127.0.0.1:1080\n</code></pre></div></details><p>上述做法仅对当前终端有效，如果需要永久生效，可以将上述命令添加到系统环境变量 (Windows) 或 <code>~/.bashrc</code> (Linux) 中。</p>',7),i={class:"custom-container tip"},o=(0,t._)("p",{class:"custom-container-title"},"提示",-1),c=(0,t.uE)('<h2 id="ssh-配置" tabindex="-1"><a class="header-anchor" href="#ssh-配置" aria-hidden="true">#</a> SSH 配置</h2><p>如果你在使用 22 端口通过 SSH 使用 Git，那么你需要在用户目录下的 <code>.ssh</code> 目录新建 <code>config</code> 文件，并输入以下内容:</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>Host github.com\n  User git\n  Port 22\n  Hostname github.com\n  # 这里在 Windows 下需要替换成实际目录，如 &quot;C:\\Users\\mister-hope\\.ssh\\id_rsa&quot;\n  IdentityFile &quot;~/.ssh/id_rsa&quot;\n  TCPKeepAlive yes\n  # Ubuntu 需要安装 corkscrew\n  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p\n  # Windows 可以改为 Git 安装目录下的 connect，如\n  # ProxyCommand &quot;C:\\Program Files\\Git\\mingw64\\bin\\connect&quot; -S 127.0.0.1:10808 -a none %h %p\n\nHost ssh.github.com\n  User git\n  Port 443\n  Hostname ssh.github.com\n  # 这里在 Windows 下需要替换成实际目录，如 &quot;C:\\Users\\mister-hope\\.ssh\\id_rsa&quot;\n  IdentityFile &quot;~/.ssh/id_rsa&quot;\n  TCPKeepAlive yes\n  # Ubuntu 需要安装 corkscrew\n  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p\n  # Windows 可以改为 Git 安装目录下的 connect，如\n  # ProxyCommand &quot;C:\\Program Files\\Git\\mingw64\\bin\\connect&quot; -S 127.0.0.1:10808 -a none %h %p\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果在 WSL 使用，获取 Windows 的 IP 地址命令为 <code>ip route | grep default | awk &#39;{print $3}&#39;</code>。</p><p>特别注意，如不进行额外配置，每次重启后主机地址都会发生变化。</p></div><p>你可以使用 <code>ssh -T git@github.com</code> 来测试你的代理配置是否有效。</p>',5),l={},r=(0,n(11164).Z)(l,[["render",function(e,s){const n=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)("div",null,[a,(0,t._)("div",i,[o,(0,t._)("p",null,[(0,t.Wm)(n,{to:"/code/windows/env-variable.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("Windows 添加环境变量")])),_:1})])]),c])}]])},11164:(e,s)=>{s.Z=(e,s)=>{const n=e.__vccOpts||e;for(const[e,t]of s)n[e]=t;return n}},66904:(e,s,n)=>{n.r(s),n.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-6479d7d7","path":"/software/git/proxy.html","title":"Git 代理","lang":"zh-CN","frontmatter":{"title":"Git 代理","icon":"git","category":["Git"],"tag":["Git","软件"],"description":"由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。 代理设置 通常情况下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 在 Windows 下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 Windows 例子 set HTTP_PROXY=http://127.0.0.1:1080 set HTTPS_PROXY=http://127.0.0.1:1080","head":[["meta",{"property":"og:url","content":"https://mrhope.site/software/git/proxy.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"Git 代理"}],["meta",{"property":"og:description","content":"由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。 代理设置 通常情况下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 在 Windows 下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 Windows 例子 set HTTP_PROXY=http://127.0.0.1:1080 set HTTPS_PROXY=http://127.0.0.1:1080"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-06T14:18:22.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"软件"}],["meta",{"property":"article:modified_time","content":"2022-12-06T14:18:22.000Z"}]]},"headers":[{"level":2,"title":"代理设置","slug":"代理设置","link":"#代理设置","children":[]},{"level":2,"title":"SSH 配置","slug":"ssh-配置","link":"#ssh-配置","children":[]}],"git":{"createdTime":1670336302000,"updatedTime":1670336302000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":1.58,"words":473},"localizedDate":"2022年12月6日","filePathRelative":"software/git/proxy.md","excerpt":"<p>由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。</p>\\n<h2> 代理设置</h2>\\n<p>通常情况下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>\\n<p>在 Windows 下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p>\\n<details class=\\"custom-container details\\"><summary>Windows 例子</summary>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token builtin class-name\\">set</span> <span class=\\"token assign-left variable\\">HTTP_PROXY</span><span class=\\"token operator\\">=</span>http://127.0.0.1:1080\\n<span class=\\"token builtin class-name\\">set</span> <span class=\\"token assign-left variable\\">HTTPS_PROXY</span><span class=\\"token operator\\">=</span>http://127.0.0.1:1080\\n</code></pre></div></details>","autoDesc":true}')}}]);