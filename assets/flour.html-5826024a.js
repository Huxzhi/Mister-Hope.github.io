const e=JSON.parse('{"key":"v-638e2b11","path":"/design/icon/flour.html","title":"面性图标设计","lang":"zh-CN","frontmatter":{"title":"面性图标设计","icon":"emoji","date":"2020-09-13T00:00:00.000Z","category":["设计"],"tag":["Icon"],"description":"面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。 下面就进入本篇的具体案例演示。 基本面性风格 如图所示，我们使用线性图标中的样式，设计成面性效果。具体的操作步骤就不需要再完整演示了，只需要将所有线性风格演示中的描边替换成填充，再使用对应的路径查找器功能即可。 需要注意的是，可能我们会习惯于使用线条工具绘制很多 1pt 宽的直线，这是错误的做法。我们需要使用矩形工具画出一个完整的闭合图形，再使用路径查找器工具或者对图形进行批量操作，这样才能保证统一。","head":[["meta",{"property":"og:url","content":"https://mrhope.site/design/icon/flour.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"面性图标设计"}],["meta",{"property":"og:description","content":"面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。 下面就进入本篇的具体案例演示。 基本面性风格 如图所示，我们使用线性图标中的样式，设计成面性效果。具体的操作步骤就不需要再完整演示了，只需要将所有线性风格演示中的描边替换成填充，再使用对应的路径查找器功能即可。 需要注意的是，可能我们会习惯于使用线条工具绘制很多 1pt 宽的直线，这是错误的做法。我们需要使用矩形工具画出一个完整的闭合图形，再使用路径查找器工具或者对图形进行批量操作，这样才能保证统一。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mrhope.site/"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"面性图标设计"}],["meta",{"property":"article:tag","content":"Icon"}],["meta",{"property":"article:published_time","content":"2020-09-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}]]},"headers":[{"level":2,"title":"基本面性风格","slug":"基本面性风格","link":"#基本面性风格","children":[]},{"level":2,"title":"扁平插画风格","slug":"扁平插画风格","link":"#扁平插画风格","children":[]},{"level":2,"title":"彩色渐变风格","slug":"彩色渐变风格","link":"#彩色渐变风格","children":[]},{"level":2,"title":"透明叠加风格","slug":"透明叠加风格","link":"#透明叠加风格","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1600101470000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":5}]},"readingTime":{"minutes":5.3,"words":1591},"localizedDate":"2020年9月13日","filePathRelative":"design/icon/flour.md","excerpt":"<p>面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。</p>\\n<p></p>\\n<p>下面就进入本篇的具体案例演示。</p>\\n<h2> 基本面性风格</h2>\\n<p></p>\\n<p>如图所示，我们使用线性图标中的样式，设计成面性效果。具体的操作步骤就不需要再完整演示了，只需要将所有线性风格演示中的描边替换成填充，再使用对应的路径查找器功能即可。</p>\\n<p>需要注意的是，可能我们会习惯于使用线条工具绘制很多 1pt 宽的直线，这是错误的做法。我们需要使用矩形工具画出一个完整的闭合图形，再使用路径查找器工具或者对图形进行批量操作，这样才能保证统一。</p>","autoDesc":true}');export{e as data};
